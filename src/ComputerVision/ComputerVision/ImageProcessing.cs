namespace ComputerVision;
using System;
using System.IO;
//The general structure of this class was generated by ChatGPT
public class ImageProcessing
{
    static void Main(string[] args)
    {
        // picture folders make sure ta adjust the paths as needed
        string nibletFolder = @"..\..\..\docs\niblet";
        string notNibletFolder = @"..\..\..\docs\not_niblet";

        Console.WriteLine("Processing Niblet images...");
        ProcessFolder(nibletFolder, "Niblet");

        Console.WriteLine("\nProcessing Not-niblet images...");
        ProcessFolder(notNibletFolder, "Not-niblet");

        Console.WriteLine("\nDone!");
    }
    
    static void ProcessFolder(string folderPath, string label)
    {
        if (!Directory.Exists(folderPath))
        {
            Console.WriteLine($"Folder not found: {folderPath}");
            return;
        }

        string[] imageFiles = Directory.GetFiles(folderPath, "*.*", SearchOption.AllDirectories);

        foreach (var file in imageFiles)
        {
            // Only allow common image formats
            if (file.EndsWith(".jpg", StringComparison.OrdinalIgnoreCase) ||
                file.EndsWith(".jpeg", StringComparison.OrdinalIgnoreCase) ||
                file.EndsWith(".png", StringComparison.OrdinalIgnoreCase) ||
                file.EndsWith(".bmp", StringComparison.OrdinalIgnoreCase))
            {
                try
                {
                    using (Image img = Image.FromFile(file))
                    {
                        Console.WriteLine($"{label}: {Path.GetFileName(file)} - {img.Width}x{img.Height}");
                        // IMAGE PROCESSING HERE 
                    }
                }
                catch (Exception ex)
                {
                    Console.WriteLine($"Error processing {file}: {ex.Message}");
                }
            }
        }
    }
}